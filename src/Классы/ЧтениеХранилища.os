#Использовать fs
#Использовать tool1cd

Перем КаталогХранилища;
Перем КаталогВыгрузкиКонфигурации;
Перем ТаблицаЗахватов;

Процедура ПриСозданииОбъекта(Хранилище = Неопределено, ВыгрузкаКонфигурации = Неопределено)

	КаталогХранилища = Хранилище;
	КаталогВыгрузкиКонфигурации = ВыгрузкаКонфигурации;
	
КонецПроцедуры

Процедура ПрочитатьХранилище() Экспорт

	Если Не ЗначениеЗаполнено(КаталогХранилища) Тогда
		ВызватьИсключение "Не указан каталог хранилища";
	КонецЕсли;

	Если Не ФС.КаталогСуществует(КаталогХранилища) Тогда
		ВызватьИсключение "Указанный каталог хранилища не существует";
	КонецЕсли;

	ПутьКФайлуХранилища = ОбъединитьПути(КаталогХранилища, "1cv8ddb.1cd");

	Если Не ФС.ФайлСуществует(ПутьКФайлуХранилища) Тогда
		ВызватьИсключение "В каталоге хранилища не найден файл хранилища";
	КонецЕсли;

	ЧтениеБД = Новый ЧтениеТаблицФайловойБазыДанных;
	ЧтениеБД.ОткрытьФайл(ПутьКФайлуХранилища);

	ТаблицаЗахватов = ПустаяТаблицаЗахватов();

	ЗахваченныеОбъекты = ЗахваченныеОбъектыХранилища(ЧтениеБД);

	Если Не ЗначениеЗаполнено(ЗахваченныеОбъекты) Тогда
		Возврат;
	КонецЕсли;

	Пользователи = ПользователиХранилища(ЧтениеБД);
	
	Если ЗначениеЗаполнено(КаталогВыгрузкиКонфигурации) Тогда
		ОбъектыМетаданных = МетаданныеИзКонфигурации();
	Иначе
		ОбъектыМетаданных = МетаданныеИзХранилища(ЧтениеБД, ЗахваченныеОбъекты);
	КонецЕсли;

	Для Каждого СтрокаЗахвата Из ЗахваченныеОбъекты Цикл
		НоваяСтрока = ТаблицаЗахватов.Добавить();
		НоваяСтрока.Пользователь = Пользователи.Получить(СтрокаЗахвата.REVISORID);
		МетаданныеСтроки = ОбъектыМетаданных.Получить(СтрокаЗахвата.OBJID);
		НоваяСтрока.Метаданные = МетаданныеСтроки;
		НоваяСтрока.ДатаЗахвата = ДатаИзТекста(СтрокаЗахвата.REVISEDATE);
	КонецЦикла;

	ЧтениеБД.ЗакрытьФайл();

КонецПроцедуры

Функция ТаблицаЗахватов() Экспорт

	Возврат ТаблицаЗахватов;

КонецФункции

Функция КореньЗахвачен() Экспорт

	Результат = Новый Структура("Захвачен,Пользователь,Длительность", Ложь);
	
	СтрокиКорня = Новый Массив;

	Если ЗначениеЗаполнено(КаталогВыгрузкиКонфигурации) Тогда
		Для каждого СтрокаЗахвата Из ТаблицаЗахватов Цикл
			Если Лев(СтрокаЗахвата.Метаданные, 14) = "Configuration." Тогда
				СтрокиКорня.Добавить(СтрокаЗахвата);
			КонецЕсли;
		КонецЦикла;
	Иначе
		СтрокиКорня = ТаблицаЗахватов.НайтиСтроки(Новый Структура("Метаданные", "Конфигурация"));
	КонецЕсли;

	Для Каждого СтрокаКорня Из СтрокиКорня Цикл
		Результат.Захвачен = Истина;
		Результат.Пользователь = СтрокаКорня.Пользователь;
		Результат.Длительность = ТекущаяДата() - СтрокаКорня.ДатаЗахвата;
		Прервать;
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция ЗахваченныеОбъектыХранилища(ЧтениеБД)

	ОтборСтрок = Новый Структура("REVISED", "true");
	Возврат ЧтениеБД.ПрочитатьТаблицу("OBJECTS").Скопировать(ОтборСтрок);

КонецФункции

Функция ПользователиХранилища(ЧтениеБД)

	ТаблицаПользователей = ЧтениеБД.ПрочитатьТаблицу("USERS");
	Пользователи = Новый Соответствие;
	Для Каждого СтрокаПользователя Из ТаблицаПользователей Цикл
		Пользователи.Вставить(СтрокаПользователя.USERID, СтрокаПользователя.NAME);
	КонецЦикла;

	Возврат Пользователи;

КонецФункции

Функция ПустаяТаблицаЗахватов()

	НоваяТаблицаЗахватов = Новый ТаблицаЗначений();
	НоваяТаблицаЗахватов.Колонки.Добавить("Метаданные");
	НоваяТаблицаЗахватов.Колонки.Добавить("Пользователь");
	НоваяТаблицаЗахватов.Колонки.Добавить("ДатаЗахвата");

	Возврат НоваяТаблицаЗахватов;

КонецФункции

Функция МетаданныеИзКонфигурации()

	Если Не ФС.КаталогСуществует(КаталогВыгрузкиКонфигурации) Тогда
		ВызватьИсключение "Указанный каталог с выгрузкой конфигурации не существует";
	КонецЕсли;

	ПутьКФайлуВыгрузкиКонфигурации = ОбъединитьПути(КаталогВыгрузкиКонфигурации, "ConfigDumpInfo.xml");

	Если Не ФС.ФайлСуществует(ПутьКФайлуВыгрузкиКонфигурации) Тогда
		ВызватьИсключение "В каталоге выгрузки конфигурации не найден файл 'ConfigDumpInfo.xml'";
	КонецЕсли;

	СоответствиеМетаданных = Новый Соответствие;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПутьКФайлуВыгрузкиКонфигурации);
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			СоответствиеМетаданных.Вставить(ЧтениеXML.ПолучитьАтрибут("id"), ЧтениеXML.ПолучитьАтрибут("name"));
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат СоответствиеМетаданных;

КонецФункции

Функция МетаданныеИзХранилища(ЧтениеБД, ЗахваченныеОбъекты)

	СоответствиеМетаданных = Новый Соответствие;

	ТаблицаИстории = ЧтениеБД.ПрочитатьТаблицу("HISTORY");

	Для Каждого СтрокаЗахвата Из ЗахваченныеОбъекты Цикл
		
		МетаданныеМассив = МетаданныеИзТаблицыИстории(СтрокаЗахвата.OBJID, ТаблицаИстории);
		МетаданныеСтроки = СтрСоединить(ОбратныйМассив(МетаданныеМассив), ".");

		СоответствиеМетаданных.Вставить(СтрокаЗахвата.OBJID, МетаданныеСтроки);

	КонецЦикла;

	
	Возврат СоответствиеМетаданных;

КонецФункции

Функция ДатаИзТекста(ТекстоваяДата)

	ТекстоваяДата = СтрЗаменить(ТекстоваяДата, ":", "-");
	ТекстоваяДата = СтрЗаменить(ТекстоваяДата, "T", "-");
	ЭлементыДаты = СтрРазделить(ТекстоваяДата, "-");

	Возврат Дата(Число(ЭлементыДаты[0]), Число(ЭлементыДаты[1]), Число(ЭлементыДаты[2]), 
				Число(ЭлементыДаты[3]), Число(ЭлементыДаты[4]), Число(ЭлементыДаты[5]));

КонецФункции

Функция МетаданныеИзТаблицыИстории(OBJID, ТаблицаИстории, Метаданные = Неопределено)

	Если Не ЗначениеЗаполнено(Метаданные) Тогда
		Метаданные = Новый Массив;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(OBJID) Тогда
		Возврат Метаданные;
	КонецЕсли;

	НайденныеСтроки = ТаблицаИстории.НайтиСтроки(Новый Структура("OBJID", OBJID));
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		
		Если Не ЗначениеЗаполнено(НайденнаяСтрока.OBJNAME) Тогда
			Продолжить;
		КонецЕсли;

		Метаданные.Добавить(НайденнаяСтрока.OBJNAME);
		Метаданные = МетаданныеИзТаблицыИстории(НайденнаяСтрока.PARENTID, ТаблицаИстории, Метаданные);

		Прервать;

	КонецЦикла;

	Возврат Метаданные;

КонецФункции

Функция ОбратныйМассив(НачальныйМассив)

	Результат = Новый Массив;
	Для н = 0 По НачальныйМассив.Количество() - 1 Цикл
		индекс = НачальныйМассив.Количество() - н - 1;
		Результат.Добавить(НачальныйМассив[индекс]);
	КонецЦикла;

	Возврат Результат;

КонецФункции